# Default values for pezsh.
# This is a YAML-formatted file.

# The overall system your service is a part of
system: pezsh
# The name of your service
service: pezsh
# The major version number for your service
version: 1

# Docker settings
image:
  # The name of your docker container
  repository: gcr.io/rwejlgaard/pez.sh
  # Your docker container's tag
  tag: latest
  imagePullPolicy: IfNotPresent

# Istio uses the service account name as a component of the service's security
# identity. Set "create" to false to use an previously created service account.
serviceAccount:
  name: pezsh
  create: true

# The initial number of pod replicas to run for your service
replicaCount: 3
# The maximum number of pods from that set that can be unavailable at once
maxUnavailable: 1

# Horizontal pod autoscaler configuration (optional)
autoscaling:
  minReplicas: 2
  maxReplicas: 4
  targetAverageCpuUtilization: 80

# Port settings
# Ports must be named <protocol>[-<suffix>] to work with Istio.
# Valid protocols are grpc, http, http2, https, mongo, mysql, redis, tcp, tls, udp
ports:
  - name: http
    port: 80
    targetPort: 80

# Configure the Istio ingress gateway to route outside traffic for the provided
# host name to this service on the ports and protocols defined in the 'ports' section 
# above. 
ingressGateway:
  name: default/pezsh-gateway
  host: "www.pez.sh"
  matchPrefix:
    - "/"

# The overall timeout for requests to this service
# Optional
overallTimeout: 10s

# Client retry settings (use Istio syntax)
# Optional
retries:
  attempts: 3
  perTryTimeout: 2s

# Circuit breaker settings (use Istio syntax)
# Optional
outlierDetection: 
  consecutive5xxErrors: 5

# Probe settings (use Kubernetes syntax)
# Optional
#probes:
#  livenessProbe:
#    initialDelaySeconds: 30
#    httpGet:
#      path: /
#      port: 80
#  readinessProbe:
#    timeoutSeconds: 10
#    httpGet:
#      path: /
#      port: 80
