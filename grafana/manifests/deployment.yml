# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: grafana
    spec:
      containers:
      - env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Viewer"
        - name: GF_INSTALL_PLUGINS
          value: grafana-piechart-panel
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: GF_SECURITY_ADMIN_USER
              name: grafana-secret
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: GF_SECURITY_ADMIN_PASSWORD
              name: grafana-secret
        image: grafana/grafana:7.2.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: grafana
        ports:
          - containerPort: 3000
            name: service
            protocol: TCP
          - containerPort: 3000
            name: grafana
            protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
          - mountPath: /var/lib/grafana/dashboards/istio
            name: dashboards-istio
          - mountPath: /var/lib/grafana/dashboards/istio-services
            name: dashboards-istio-services
          - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
            name: config
            subPath: datasources.yaml
          - mountPath: /var/lib/grafana/dashboards/cloudprober
            name: cloudprober-dashboards
          - mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
            name: config
            subPath: dashboardproviders.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana
        name: config
      - configMap:
          defaultMode: 420
          name: istio-grafana-dashboards
        name: dashboards-istio
      - configMap:
          defaultMode: 420
          name: istio-services-grafana-dashboards
        name: dashboards-istio-services
      - configMap:
          defaultMode: 420
          name: cloudprober-grafana-dashboards
        name: cloudprober-dashboards
      - emptyDir: {}
        name: storage
